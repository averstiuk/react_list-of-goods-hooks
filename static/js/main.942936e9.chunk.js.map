{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","isStarted","setIsStarted","isReversed","setIsReverse","sortType","setSortType","visibleGoods","sort","g1","g2","localeCompare","length","reverse","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"oMAGMA,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAmCF,oBAAS,GAA5C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAmBMC,EAAY,UAAOT,GAiBzB,OAfAS,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,IAAK,WACH,OAAOI,EAAGE,cAAcD,GAC1B,IAAK,SACH,OAAOD,EAAGG,OAASF,EAAGE,OACxB,QACE,OAAO,MAITT,GACFI,EAAaM,UAIb,qBAAKC,UAAU,MAAf,SACGb,EACC,qCACE,wBACEc,KAAK,SACLD,UAAU,iBACVE,QArCQ,WAChBV,EAAY,aAiCN,iCAQA,wBACES,KAAK,SACLD,UAAU,oBACVE,QAzCW,WACnBV,EAAY,WAqCN,4BAQA,wBACES,KAAK,SACLD,UAAU,oBACVE,QAzDM,kBACdZ,GAAcD,IAqDR,qBAQA,wBACEY,KAAK,SACLD,UAAU,mBACVE,QArDI,WACZZ,GAAa,GACbE,EAAY,KAgDN,mBAQA,oBAAIQ,UAAU,QAAd,SACGP,EAAaU,KAAI,SAAAC,GAAI,OACpB,oBACEJ,UAAU,cADZ,SAIGI,GAFIA,WAQb,wBACEH,KAAK,SACLD,UAAU,6BACVE,QAAS,kBACPd,GAAa,IAJjB,sBCpGRiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.942936e9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReversed, setIsReverse] = useState(false);\n  const [sortType, setSortType] = useState('');\n\n  const reverse = () => (\n    setIsReverse(!isReversed)\n  );\n\n  const sortByABC = () => {\n    setSortType('ALPHABET');\n  };\n\n  const sortByLength = () => {\n    setSortType('LENGTH');\n  };\n\n  const reset = () => {\n    setIsReverse(false);\n    setSortType('');\n  };\n\n  const visibleGoods = [...goodsFromServer];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case 'ALPHABET':\n        return g1.localeCompare(g2);\n      case 'LENGTH':\n        return g1.length - g2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      {isStarted ? (\n        <>\n          <button\n            type=\"button\"\n            className=\"button is-link\"\n            onClick={sortByABC}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-success\"\n            onClick={sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-warning\"\n            onClick={reverse}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-danger\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n\n          <ul className=\"Goods\">\n            {visibleGoods.map(good => (\n              <li\n                className=\"Goods__item\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <button\n          type=\"button\"\n          className=\"button is-primary is-large\"\n          onClick={() => (\n            setIsStarted(true)\n          )}\n        >\n          Start\n        </button>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}